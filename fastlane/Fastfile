fastlane_version "2.126"

default_platform :ios

platform :ios do
  skip_docs

  before_all do
    begin
      sh "../server.sh start"
    rescue => e
    end

    carthage(
      command: "bootstrap",
      cache_builds: true,
    )

    swiftlint(
      reporter: "emoji",
      strict: true,
    )
  end

  desc """Runs the following lanes:
  - test
  - tvOS
  - macOS
  - pod_lint
  - carthage_lint
  - spm_lint
  """
  lane :ci do
    test
    tvOS
    macOS

    # Package managers
    pod_lint
    carthage_lint
    spm_lint
  end

  desc "Runs all the tests"
  lane :test do
    devices = ["iPhone XR (~> 12)"]
    # devices << "iPhone X (~> 11.0)" if !Helper.is_ci?
    # devices << "iPhone 7 (~> 10.0)" if !Helper.is_ci?
    # devices << "iPhone 6 (~> 9.0)" if !Helper.is_ci?
    # devices << "iPhone 5s (~> 8.1)" if !Helper.is_ci?

    # The problem lies in the fact (or rather: serious bug in xcodebuild) that
    # the timeout for connecting to the XCTest server starts at the moment you
    # issue the command xcodebuild. The timeout is 120 seconds, so if your
    # compilation + startup of the simulator takes longer than 2 minutes
    # xcodebuild will give this "Canceling tests due to timeout" error.
    # https://stackoverflow.com/questions/37922146/xctests-failing-on-physical-device-canceling-tests-due-to-timeout/40790171#40790171
    scan(
      build_for_testing: true,
      devices: select_similar_simulator(devices),
      scheme: "RxWebSocket-iOS",
      project: "RxWebSocket.xcodeproj",
      code_coverage: true,
    )

    scan(
      test_without_building: true,
      devices: select_similar_simulator(devices),
      scheme: "RxWebSocket-iOS",
      project: "RxWebSocket.xcodeproj",
      code_coverage: true,
    )

    slather(
      proj: 'RxWebSocket.xcodeproj',
      scheme: 'RxWebSocket-iOS',
      cobertura_xml: true,
    )

    codecov(
      project_name: 'RxWebSocket',
      use_xcodeplist: true,
    )
  end

  desc "Lint Cocoapods Lib"
  lane :pod_lint do
    cocoapods(
      podfile: "Example/Podfile",
      try_repo_update_on_error: true,
    )

    pod_lib_lint(
      verbose: false,
    )
  end

  desc "Lint Carthage lib"
  lane :carthage_lint do
    carthage(
      command: "update",
      cache_builds: true,
    )

    carthage(
      command: "build",
      cache_builds: true,
      no_skip_current: true,
    )
  end

  desc "Deploy a new version to Github and Cocoapods"
  lane :release do
    carthage(
      command: "archive",
      frameworks: ["RxWebSocket"],
    )

    pod_push(
      path: "RxWebSocket.podspec",
      verbose: true,
    )

    prev_tag = sh "git describe --abbrev=0 --tags `git rev-list --tags --skip=1  --max-count=1`"
    changelog = changelog_from_git_commits(
      between: [last_git_tag, prev_tag.strip],
      pretty: "- %s"
    )

    set_github_release(
      repository_name: "fjcaetano/RxWebSocket",
      tag_name: last_git_tag,
      name: last_git_tag,
      upload_assets: ["RxWebSocket.framework.zip"],
      description: changelog,
    )
  end

  desc "Runs tests against tvOS"
  lane :tvOS do
    devices = [
      "Apple TV (~> 12)",
      "Apple TV (~> 11)",
      "Apple TV (~> 10)",
      "Apple TV (~> 9)",
    ]

    # The problem lies in the fact (or rather: serious bug in xcodebuild) that
    # the timeout for connecting to the XCTest server starts at the moment you
    # issue the command xcodebuild. The timeout is 120 seconds, so if your
    # compilation + startup of the simulator takes longer than 2 minutes
    # xcodebuild will give this "Canceling tests due to timeout" error.
    # https://stackoverflow.com/questions/37922146/xctests-failing-on-physical-device-canceling-tests-due-to-timeout/40790171#40790171
    scan(
      build_for_testing: true,
      devices: select_similar_simulator(devices, FastlaneCore::SimulatorTV),
      scheme: "RxWebSocket-tvOS",
      project: "RxWebSocket.xcodeproj",
    )

    scan(
      test_without_building: true,
      devices: select_similar_simulator(devices, FastlaneCore::SimulatorTV),
      scheme: "RxWebSocket-tvOS",
      project: "RxWebSocket.xcodeproj",
    )
  end

  desc "Run tests against macOS"
  lane :macOS do
    # The problem lies in the fact (or rather: serious bug in xcodebuild) that
    # the timeout for connecting to the XCTest server starts at the moment you
    # issue the command xcodebuild. The timeout is 120 seconds, so if your
    # compilation + startup of the simulator takes longer than 2 minutes
    # xcodebuild will give this "Canceling tests due to timeout" error.
    # https://stackoverflow.com/questions/37922146/xctests-failing-on-physical-device-canceling-tests-due-to-timeout/40790171#40790171
    scan(
      build_for_testing: true,
      scheme: "RxWebSocket-macOS",
      project: "RxWebSocket.xcodeproj",
      destination: "platform=macOS",
    )

    scan(
      test_without_building: true,
      scheme: "RxWebSocket-macOS",
      project: "RxWebSocket.xcodeproj",
      destination: "platform=macOS",
    )
  end

  desc "Swift Package Manager compliance"
  lane :spm_lint do
    spm(
      command: "reset",
    )

    spm(
      command: "build",
      verbose: true
    )

    spm(
      command: "test",
    )
  end

  after_all do |lane|
    begin
      sh "../server.sh stop"
    rescue => e
    end
  end

  error do |lane, exception|
    begin
      sh "../server.sh stop"
    rescue => e
    end
  end

  # Private

  def select_similar_simulator(args, provider=FastlaneCore::Simulator)
    args.map { |device_string|
      pieces = device_string.split(' (')
      provider.all
        .select { |s| s.name == pieces.first }
        .sort_by { |s| Gem::Version.create(s.os_version) }
        .detect { |s| Gem::Requirement.new(pieces[1].tr('()', '')).satisfied_by?(Gem::Version.create(s.os_version)) }
    }
    .compact
    .map { |s| "#{s.name} (#{s.ios_version})"}
  end
end
